{"version":3,"file":"commonHelpers.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["\nimport axios from 'axios';\n\nconst BASE_URL = 'https://pixabay.com/api/';\nconst API_KEY = '42272856-fbb9ecaa9aa7f62044da3b204';\n\nexport async function getImages(query, currentPage, PER_PAGE) {\n  const url = `${BASE_URL}?key=${API_KEY}`;\n\n  try {\n    const { data } = await axios.get(url, {\n      params: {\n        image_type: 'photo',\n        orientation: 'horizontal',\n        safesearch: 'true',\n        q: query,\n        per_page: PER_PAGE,\n        page: currentPage,\n      },\n    });\n    return data;\n  } catch (error) {\n    console.error(\"Сталася помилка при отриманні зображень\", error.message);\n    throw error;\n  }\n}\n\n\nrefs.form.addEventListener('submit', onFormSubmit);\nrefs.btnLoadMore.addEventListener('click', loadMore);\n","export function galleryTemplate({\n  largeImageURL,\n  webformatURL,\n  tags,\n  likes,\n  views,\n  comments,\n  downloads,\n}) {\n  return `<a class='gallery-link' href='${largeImageURL}'><img class='gallery-image' src='${webformatURL}' alt='${tags}'/>\n  <div class='gallery-review'>\n  <div class='gallery-review-item'><b>Likes</b> <span>${likes}</span></div>\n  <div class='gallery-review-item'><b>Views</b> <span>${views}</span></div>\n  <div class='gallery-review-item'><b>Comments</b> <span>${comments}</span></div>\n  <div class='gallery-review-item'><b>Downloads</b> <span>${downloads}</span></div>\n  </div></a>\n    `;\n}\n\nlet gallery = new SimpleLightbox('.gallery a', {\n  showCounter: false,\n  captionDelay: 250,\n  captions: true,\n  captionsData: 'alt',\n  captionPosition: 'bottom',\n});\n","import iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\nimport SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\nimport errorIcon from './img/bi_x-octagon.svg';\nimport axios from 'axios';\nimport { getImages } from './js/pixabay-api';\nimport { galleryTemplate } from './js/render-functions';\n\n\nconst refs = {\n  form: document.querySelector('.form'),\n  gallery: document.querySelector('.gallery'),\n  loader: document.querySelector('.loader'),\n  btnLoadMore: document.querySelector('.btn-load-more'),\n};\n\nlet query = '';\nlet currentPage = 1;\nlet total = 0;\nconst PER_PAGE = 15;\n\nasync function onFormSubmit(event) {\n  event.preventDefault();\n  refs.btnLoadMore.classList.add('hidden');\n  if (query === event.target.elements.query.value.trim()) {\n    event.target.reset();\n    toggleBtnLoadMore();\n    return;\n  } else {\n    query = event.target.elements.query.value.trim();\n  }\n  currentPage = 1;\n  refs.gallery.textContent = '';\n  toggleLoader();\n\n  try {\n    const data = await getImages();\n    if (!query) {\n      iziToast.warning({\n        message: 'Sorry, you forgot to enter a search term. Please try again!',\n        position: 'topRight',\n        messageSize: '16px',\n        timeout: 2000,\n      });\n      toggleLoader();\n      return;\n    } else if (parseInt(data.totalHits) > 0) {\n      toggleBtnLoadMore();\n      renderMarkup(data.hits);\n      total = data.totalHits;\n      checkBtnStatus();\n      toggleLoader();\n    } else {\n      iziToast.error({\n        message:\n          'Sorry, there are no images matching your search query. Please try again!',\n        position: 'topRight',\n        backgroundColor: 'red',\n        messageColor: 'white',\n        messageSize: '16px',\n        iconColor: 'white',\n        iconUrl: errorIcon,\n        color: 'white',\n        timeout: 2000,\n      });\n      toggleLoader();\n    }\n  } catch (error) {\n    iziToast.error({\n      message: 'Error',\n      position: 'topRight',\n      backgroundColor: 'red',\n      messageColor: 'white',\n      messageSize: '16px',\n      iconColor: 'white',\n      iconUrl: errorIcon,\n      color: 'white',\n      timeout: 2000,\n    });\n    toggleLoader();\n  }\n  event.target.reset();\n}\n\nfunction renderMarkup(images) {\n  const markup = images.map(galleryTemplate).join('');\n  refs.gallery.insertAdjacentHTML('beforeend', markup);\n  gallery.refresh();\n}\n\nasync function loadMore() {\n  toggleLoader();\n  toggleBtnLoadMore();\n  currentPage += 1;\n  const data = await getImages();\n  renderMarkup(data.hits);\n  toggleBtnLoadMore();\n  checkBtnStatus();\n  toggleLoader();\n  scrollByGalleryCardHeight();\n}\n\nfunction checkBtnStatus() {\n  const maxPage = Math.ceil(total / PER_PAGE);\n  const isLastPage = maxPage <= currentPage;\n  if (isLastPage) {\n    refs.btnLoadMore.classList.add('hidden');\n    iziToast.info({\n      message: \"We're sorry, but you've reached the end of search results.\",\n      position: 'topRight',\n      messageSize: '16px',\n      timeout: 2000,\n    });\n  }\n}\n\nfunction toggleLoader() {\n  refs.loader.classList.toggle('hidden');\n}\n\nfunction toggleBtnLoadMore() {\n  refs.btnLoadMore.classList.toggle('hidden');\n}\n\nfunction scrollByGalleryCardHeight() {\n  const galleryCard = document.querySelector('.gallery-link');\n  if (galleryCard) {\n    const cardRect = galleryCard.getBoundingClientRect();\n    const cardHeight = cardRect.height;\n    window.scrollBy({\n      top: cardHeight * 2,\n      behavior: 'smooth',\n    });\n  } else {\n    return;\n  }\n}"],"names":[],"mappings":"0uBA4BA,KAAK,KAAK,iBAAiB,SAAU,YAAY,EACjD,KAAK,YAAY,iBAAiB,QAAS,QAAQ,ECVrC,IAAI,eAAe,aAAc,CAC7C,YAAa,GACb,aAAc,IACd,SAAU,GACV,aAAc,MACd,gBAAiB,QACnB,CAAC,ECdO,SAAS,cAAc,OAAO,EAC3B,SAAS,cAAc,UAAU,EAClC,SAAS,cAAc,SAAS,EAC3B,SAAS,cAAc,gBAAgB"}